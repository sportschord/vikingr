{"version":3,"sources":["2019 Updated Logo-01.png","Components/circles.js","App.js","reportWebVitals.js","index.js"],"names":["Circles","useEffect","dataSet","subject","count","d3","selectAll","data","enter","append","text","dt","classed","style","max","forEach","getMax","transition","duration","bar","delay","className","id","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,G,MAAA,IAA0B,kD,sBCkD1BA,MA7Cf,WAqCE,OAnCAC,qBAAU,WAGN,IAAIC,EAAU,CACZ,CAACC,QAAS,OAAQC,MAAO,KACzB,CAACD,QAAS,OAAQC,MAAO,IACzB,CAACD,QAAS,OAAQC,MAAO,KACzB,CAACD,QAAS,UAAWC,MAAO,MAG9BC,IAAU,YAAYC,UAAU,KAAKC,KAAKL,GAASM,QAAQC,OAAO,KAAKC,MAAK,SAAAC,GAAE,OAAIA,EAAGR,QAAU,KAAOQ,EAAGP,SAavGC,IAAU,aAAaC,UAAU,OAAOC,KAAKL,GAC5CM,QAAQC,OAAO,OAAOG,QAAQ,OAAO,GAAMC,MAAM,SADlD,UAVe,WACb,IAAIC,EAAM,EAIV,OAHAZ,EAAQa,SAAQ,SAACJ,GACVA,EAAGP,MAAQU,IAAMA,EAAMH,EAAGP,UAE1BU,EAMsDE,GAD/D,OAIAX,IAAU,aAAaC,UAAU,QAChCW,aAAaC,SAAS,KAAML,MAAM,UAAU,SAAAM,GAAG,gBAAOA,EAAIf,MAAX,SAC7CS,MAAM,QAAS,QAAQA,MAAM,eAAgB,QAAQO,MAAM,OAI/D,IAGH,sBAAKC,UAAY,MAAjB,UACE,qBAAKC,GAAG,YACR,qBAAKA,GAAG,iBCzBCC,MAdf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKG,IAAKC,EAAMJ,UAAU,WAAWK,IAAI,SACzC,6CAGA,cAAC,EAAD,UCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a7367cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/2019 Updated Logo-01.9ea7dce6.png\";","\nimport '../App.css';\nimport * as d3 from 'd3'\nimport {useEffect, useState} from 'react'\n\nfunction Circles() {\n  \n  useEffect(() => {\n\n      // Create a dataset of pets and the amount of people that own them\n      let dataSet = [\n        {subject: \"Dogs\", count: 150},\n        {subject: \"Fish\", count: 75},\n        {subject: \"Cats\", count: 135},\n        {subject: \"Bunnies\", count: 240},\n      ]\n      // Generate a p tag for each element in the dataSet with the text: Subject: Count \n      d3.select('#pgraphs').selectAll('p').data(dataSet).enter().append('p').text(dt => dt.subject + \": \" + dt.count)\n      \n      // Bar Chart:\n        const getMax = () => { // Calculate the maximum value in the DataSet\n          let max = 0\n          dataSet.forEach((dt) => {\n              if(dt.count > max) {max = dt.count}\n          })\n          return max\n        }\n     \n        \n        // Create each of the bars and then set them all to have the same height(Which is the max value)\n        d3.select('#BarChart').selectAll('div').data(dataSet) \n        .enter().append('div').classed('bar', true).style('height', `${getMax()}px`)\n    \n        //Transition the bars into having a height based on their corresponding count value\n        d3.select('#BarChart').selectAll('.bar')\n        .transition().duration(1000).style('height', bar => `${bar.count}px`)\n          .style('width', '80px').style('margin-right', '10px').delay(300) // Fix their width and margin\n        \n        \n        \n    }, [])\n\n  return (\n    <div className = \"App\">\n      <div id=\"pgraphs\"></div> \n      <div id=\"BarChart\"></div> \n    </div>\n  );\n}\n\nexport default Circles;\n","import logo from './2019 Updated Logo-01.png';\n\nimport './App.css';\nimport Circles from './Components/circles';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          D3 Bar Chart\n        </p>\n        <Circles />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}